# File: templates/build-test.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: '' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
  OS: 'Windows'

jobs:
- job:
  displayName: ${{ parameters.BuildConfiguration }}-${{ parameters.VmImage }} Azure.Cosmos.Tests
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Azure.Cosmos.Tests
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Azure.Cosmos/Azure.Cosmos.Tests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} /p:OS=${{ parameters.OS }}
      publishTestResults: true
      nugetConfigPath: NuGet.config
      testRunTitle: Azure.Cosmos.Tests

- job:
  displayName: ${{ parameters.BuildConfiguration }}-${{ parameters.VmImage }} Azure.Cosmos.EmulatorTests
  timeoutInMinutes: 120
  condition: and(succeeded(), eq('${{ parameters.OS }}', 'Windows'))
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - template:  emulator-setup.yml

  - task: DotNetCoreCLI@2
    displayName: Azure.Cosmos.EmulatorTests
    condition: succeeded()
    continueOnError: true
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Azure.Cosmos/Azure.Cosmos.EmulatorTests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} /p:OS=${{ parameters.OS }}
      nugetConfigPath: NuGet.config
      publishTestResults: true
      testRunTitle: Azure.Cosmos.EmulatorTests
