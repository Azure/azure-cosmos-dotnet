# File: templates/build-preview.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: ''
  OS: 'Windows'

jobs:

- job:
  displayName: Preview Flag ${{ parameters.BuildConfiguration }} 
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Build Microsoft.Azure.Cosmos PREVIEW
    inputs: 
      command: build  
      configuration: $(parameters.BuildConfiguration)
      nugetConfigPath: NuGet.config
      projects: Microsoft.Azure.Cosmos.sln 
      arguments: -p:Optimize=true -p:IsPreview=true
      versioningScheme: OFF
      
- job:
  displayName: Preview Tests ${{ parameters.BuildConfiguration }}
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching

  - task: DotNetCoreCLI@2
    displayName: Microsoft.Azure.Cosmos.Tests
    condition: succeeded()
    inputs:
      command: test
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Tests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} /p:IsPreview=true /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CopyLocalLockFileAssemblies=true /p:OS=${{ parameters.OS }}
      publishTestResults: true
      nugetConfigPath: NuGet.config
      testRunTitle: Microsoft.Azure.Cosmos.Tests
  - script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.SourcesDirectory)/Microsoft.Azure.Cosmos/tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
    displayName: Create Code coverage report
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'