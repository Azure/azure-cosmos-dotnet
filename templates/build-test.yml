# File: templates/build-test.yml

parameters:
  BuildConfiguration: ''
  Arguments: ''
  VmImage: '' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
  runEmulatorTests: true 

jobs: 
- job: 
  displayName: ${{ parameters.BuildConfiguration }}-${{ parameters.VmImage }} Microsoft.Azure.Cosmos.Tests
  pool:
    vmImage: ${{ parameters.VmImage }}
    
  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching
    lfs: true  # whether to download Git-LFS files; defaults to false

  - task: DotNetCoreCLI@2
    displayName: Microsoft.Azure.Cosmos.Tests
    condition: succeeded() 
    inputs: 
      command: build 
      projects: 'Microsoft.Azure.Cosmos/**/*.csproj' 
      arguments: --configuration ${{ parameters.BuildConfiguration }}
      nugetConfigPath: NuGet.config 
      testRunTitle: Microsoft.Azure.Cosmos.Tests

  - bash: |
     # Write your commands here
     
     echo 'Hello world'
     ls -l -R /home/vsts/.nuget/packages/
    displayName: 'Bash Script'  
    condition: always()

#  - task: DotNetCoreCLI@2
#    displayName: Microsoft.Azure.Cosmos.Tests
#    condition: always()
#    inputs: 
#      command: test 
#      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.Tests/*.csproj' 
#      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }}
#      nugetConfigPath: NuGet.config 
#      publishTestResults: true 
#      testRunTitle: Microsoft.Azure.Cosmos.Tests
      
- job: 
  displayName: ${{ parameters.BuildConfiguration }}-${{ parameters.VmImage }} Microsoft.Azure.Cosmos.EmulatorTests
  condition: and(succeeded(), eq('${{ parameters.runEmulatorTests }}', 'true'))
  pool:
    vmImage: ${{ parameters.VmImage }}

  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # if true, execute `execute git clean -ffdx && git reset --hard HEAD` before fetching
    lfs: true  # whether to download Git-LFS files; defaults to false

  - template:  emulator-setup.yml

  - task: DotNetCoreCLI@2
    displayName: Microsoft.Azure.Cosmos.EmulatorTests
    condition: succeeded() 
    inputs:
      command: test 
      projects: 'Microsoft.Azure.Cosmos/tests/Microsoft.Azure.Cosmos.EmulatorTests/*.csproj'
      arguments: ${{ parameters.Arguments }} --configuration ${{ parameters.BuildConfiguration }} 
      nugetConfigPath: NuGet.config 
      publishTestResults: true 
      testRunTitle: Microsoft.Azure.Cosmos.EmulatorTests

